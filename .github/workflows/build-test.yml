# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, stage, foliage, cpp20 ]
  pull_request:
    branches: [ master, stage, foliage ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-ubuntu:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 30

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
            submodules: recursive

      # Runs a set of commands using the runners shell
      
      #- name: build relic
      #  run:  python3 build.py -DENABLE_BOOST=OFF -DENABLE_SODIUM=OFF -DENABLE_ASAN=ON  -DCMAKE_BUILD_TYPE=RelWithDebInfo
        
      #- name: build bitpolymul
      #  run:  python3 build.py --bitpolymul --par=4  -DVERBOSE_FETCH=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo
          
      - name: build libOTe
        run:  python3 build.py --par=4 -D ENABLE_ALL_OT=ON -DENABLE_CIRCUITS=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo -DENABLE_ASAN=ON -DENABLE_MOCK_OT=true 

      - name: unit tests
        run: |
             ./out/build/linux/frontend/frontend_libOTe -u
       

      - name: find source tree
        run: |
            cd libOTe_Tests/cmakeTests
            cmake -S . -B out/  -DCMAKE_BUILD_TYPE=RelWithDebInfo -D CMAKE_PREFIX_PATH=../../
            cmake --build out/
            ./out/main
            rm -rf out/
            cd ../..
            
      - name: hint test
        run: |
            cd libOTe_Tests/cmakeTests
            cmake -S . -B out/  -D LIBOTE_HINT=../..
            cmake --build out/
            ./out/main
            rm -rf out/
            cd ../..

      - name: install prefix test
        run: |
            python3 build.py --install=~/install -DCMAKE_BUILD_TYPE=RelWithDebInfo
            cd libOTe_Tests/cmakeTests
            cmake -S . -B out/  -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_PREFIX_PATH=~/install
            cmake --build out/
            ./out/main
            rm -rf out/
            cd ../..
            

      - name: install test
        run: |
            python3 build.py --install --sudo -DCMAKE_BUILD_TYPE=RelWithDebInfo
            cd libOTe_Tests/cmakeTests
            cmake -S . -B out/  -DCMAKE_BUILD_TYPE=RelWithDebInfo
            cmake --build out/
            ./out/main
            rm -rf out/
            cd ../..
  
                    
      - name: build libOTe w/ sodium
        run:  |
            rm ./out/build/linux/frontend/frontend_libOTe
            python3 build.py --par=4 -D ENABLE_ALL_OT=ON -D ENABLE_SODIUM=ON -DENABLE_RELIC=OFF -DPRINT_LOG_ON_FAIL=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo

      - name: unit tests
        run:  ./out/build/linux/frontend/frontend_libOTe -u
       

      - name: find source tree
        run: |
            cd libOTe_Tests/cmakeTests
            cmake -S . -B out/  -DCMAKE_BUILD_TYPE=RelWithDebInfo -DSODIUM=ON -D CMAKE_PREFIX_PATH=../../
            cmake --build out/
            ./out/main
            rm -rf out/
            cd ../..
            
      - name: hint test
        run: |
            cd libOTe_Tests/cmakeTests
            cmake -S . -B out/ -DSODIUM=ON -D LIBOTE_HINT=../..
            cmake --build out/
            ./out/main
            rm -rf out/
            cd ../..

      - name: install prefix test
        run: |
            python3 build.py --install=~/install
            cd libOTe_Tests/cmakeTests
            cmake -S . -B out/ -DSODIUM=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_PREFIX_PATH=~/install
            cmake --build out/
            ./out/main
            rm -rf out/
            cd ../..
            

      - name: install test
        run: |
            python3 build.py --install --sudo 
            cd libOTe_Tests/cmakeTests
            cmake -S . -B out/  -DSODIUM=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo
            cmake --build out/
            ./out/main
            rm -rf out/
            cd ../..

  # This workflow contains a single job called "build"
  build-osx:
    # The type of runner that the job will run on
    runs-on: macos-14
    timeout-minutes: 20

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
            submodules: recursive

      # Runs a set of commands using the runners shell

      - name: build libOTe
        run:  python3 build.py -DENABLE_BOOST=OFF -DVERBOSE_FETCH=ON -DENABLE_SSE=OFF -DENABLE_MOCK_OT=true -D ENABLE_ALL_OT=ON 

      - name: unit tests
        run:  ./out/build/osx/frontend/frontend_libOTe -u 
       

      - name: find source tree
        run: |
            cd libOTe_Tests/cmakeTests
            cmake -S . -B out/  -DCMAKE_BUILD_TYPE=Release -D CMAKE_PREFIX_PATH=../../
            cmake --build out/
            ./out/main
            rm -rf out/
            cd ../..
            
      - name: hint test
        run: |
            cd libOTe_Tests/cmakeTests
            cmake -S . -B out/  -D LIBOTE_HINT=../..
            cmake --build out/
            ./out/main
            rm -rf out/
            cd ../..

      - name: install prefix test
        run: |
            python3 build.py --install=~/install
            cd libOTe_Tests/cmakeTests
            cmake -S . -B out/  -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=~/install
            cmake --build out/
            ./out/main
            rm -rf out/
            cd ../..
            

      - name: install test
        run: |
            python3 build.py --install --sudo
            cd libOTe_Tests/cmakeTests
            cmake -S . -B out/  -DCMAKE_BUILD_TYPE=Release
            cmake --build out/
            ./out/main
            rm -rf out/
            cd ../..


  build-windows:
    # The type of runner that the job will run on
    runs-on: windows-2022
    timeout-minutes: 30
  
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
            submodules: recursive
      - uses: seanmiddleditch/gha-setup-ninja@v3
      - uses: ilammy/msvc-dev-cmd@v1

      # Runs a set of commands using the runners shell        
      - name: build libOTe
        run:  python3 build.py -D ENABLE_ALL_OT=ON -DENABLE_MOCK_OT=true -G Ninja  

        
      - name: unit test
        run:  ./out/build/x64-Release/frontend/frontend_libOTe.exe -u
          
      - name: find source tree
        run: |
            cd libOTe_Tests/cmakeTests
            cmake -S . -B out/  -DCMAKE_BUILD_TYPE=Release -D CMAKE_PREFIX_PATH=../../
            cmake --build out/ --config Release
            ./out/Release/main.exe
            rm -r -fo out/
            cd ../..
            
      - name: hint test
        run: |
            cd libOTe_Tests/cmakeTests
            cmake -S . -B out/  -D LIBOTE_HINT=../..
            cmake --build out/ --config Release
            ./out/Release/main.exe
            rm -r -fo out/
            cd ../..

      - name: install prefix test
        run: |
            python3 build.py --install=~/install
            cd libOTe_Tests/cmakeTests
            cmake -S . -B out/  -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=~/install
            cmake --build out/ --config Release
            ./out/Release/main.exe
            rm -r -fo out/
            cd ../..
