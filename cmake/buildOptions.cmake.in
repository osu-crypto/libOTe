
set(libOTe_VERSION_MAJOR     @libOTe_VERSION_MAJOR@)
set(libOTe_VERSION_MINOR     @libOTe_VERSION_MINOR@)
set(libOTe_VERSION_PATCH     @libOTe_VERSION_PATCH@)

unset(libOTe_debug_FOUND CACHE)
unset(libOTe_Debug_FOUND CACHE)
unset(libOTe_DEBUG_FOUND CACHE)
unset(libOTe_release_FOUND CACHE)
unset(libOTe_Release_FOUND CACHE)
unset(libOTe_RELEASE_FOUND CACHE)
unset(libOTe_relwithdebinfo_FOUND CACHE)
unset(libOTe_RelWithDebInfo_FOUND CACHE)
unset(libOTe_RELWITHDEBINFO_FOUND CACHE)

set(LIBOTE_BUILD_TYPE "${CMAKE_BUILD_TYPE}")
string( TOLOWER "${CMAKE_BUILD_TYPE}" CMAKE_BUILD_TYPE_lower )
if(CMAKE_BUILD_TYPE_lower STREQUAL "debug")
	set(libOTe_debug_FOUND true)
	set(libOTe_Debug_FOUND true)
	set(libOTe_DEBUG_FOUND true)
endif()
if(CMAKE_BUILD_TYPE_lower STREQUAL "release")
	set(libOTe_release_FOUND true)
	set(libOTe_Release_FOUND true)
	set(libOTe_RELEASE_FOUND true)
endif()
if(CMAKE_BUILD_TYPE_lower STREQUAL "relwithdebinfo")
	set(libOTe_relwithdebinfo_FOUND true)
	set(libOTe_RelWithDebInfo_FOUND true)
	set(libOTe_RELWITHDEBINFO_FOUND true)
endif()


set(LIBOTE_STD_VER @LIBOTE_STD_VER@)
set(CRYPTO_TOOLS_STD_VER @LIBOTE_STD_VER@)
set(libOTe_std_14_FOUND false)
set(libOTe_std_17_FOUND false)
set(libOTe_std_20_FOUND false)
set(libOTe_std_${LIBOTE_STD_VER}_FOUND true)


set(ENABLE_BITPOLYMUL		@ENABLE_BITPOLYMUL@)
set(ENABLE_BOOST			@ENABLE_BOOST@)
set(ENABLE_RELIC			@ENABLE_RELIC@)
set(ENABLE_SODIUM			@ENABLE_SODIUM@)
set(ENABLE_COPROTO			@ENABLE_COPROTO@)

set(ENABLE_OPENSSL			@ENABLE_OPENSSL@)
set(ENABLE_CIRCUITS			@ENABLE_CIRCUITS@)
set(ENABLE_SSE				@ENABLE_SSE@)
set(ENABLE_AVX				@ENABLE_AVX@)
set(ENABLE_PIC				@ENABLE_PIC@)
set(ENABLE_ASAN				@ENABLE_ASAN@)
set(SODIUM_MONTGOMERY       @SODIUM_MONTGOMERY@)

set(ENABLE_SIMPLESTOT     @ENABLE_SIMPLESTOT@)
set(ENABLE_SIMPLESTOT_ASM @ENABLE_SIMPLESTOT_ASM@)
set(ENABLE_MRR            @ENABLE_MRR@)
set(ENABLE_MRR_TWIST      @ENABLE_MRR_TWIST@)
set(ENABLE_MR             @ENABLE_MR@)
set(ENABLE_MR_KYBER       @ENABLE_MR_KYBER@)
set(ENABLE_KOS            @ENABLE_KOS@)
set(ENABLE_IKNP           @ENABLE_IKNP@)
set(ENABLE_SOFTSPOKEN_OT  @ENABLE_SOFTSPOKEN_OT@)
set(ENABLE_SILENTOT       @ENABLE_SILENTOT@)
set(ENABLE_DELTA_KOS      @ENABLE_DELTA_KOS@)
set(ENABLE_OOS            @ENABLE_OOS@)
set(ENABLE_KKRT           @ENABLE_KKRT@)
set(ENABLE_SILENT_VOLE    @ENABLE_SILENT_VOLE@)

set(ENABLE_FOLEAGE        @ENABLE_FOLEAGE@)

set(ENABLE_REGULAR_DPF    @ENABLE_REGULAR_DPF@)
set(ENABLE_SPARSE_DPF     @ENABLE_SPARSE_DPF@)
set(ENABLE_TERNARY_DPF    @ENABLE_TERNARY_DPF@)

set(ENABLE_PPRF           @ENABLE_PPRF@)

set(libOTe_boost_FOUND		${ENABLE_BOOST})
set(libOTe_relic_FOUND		${ENABLE_RELIC})
set(libOTe_sodium_FOUND		${ENABLE_SODIUM})
set(libOTe_bitpolymul_FOUND ${ENABLE_BITPOLYMUL})
set(libOTe_openssl_FOUND	${ENABLE_OPENSSL})
set(libOTe_sodium_montgomery_FOUND	${SODIUM_MONTGOMERY})

set(libOTe_circuits_FOUND	${ENABLE_CIRCUITS})
set(libOTe_sse_FOUND		${ENABLE_SSE})
set(libOTe_avx_FOUND		${ENABLE_AVX})
set(libOTe_asan_FOUND		${ENABLE_ASAN})
set(libOTe_pic_FOUND		${ENABLE_PIC})

if(ENABLE_SSE)
	set(libOTe_no_sse_FOUND false)
else()
	set(libOTe_no_sse_FOUND true)
endif()

if(ENABLE_AVX)
	set(libOTe_no_avx_FOUND false)
else()
	set(libOTe_no_avx_FOUND true)
endif()
if(ENABLE_PIC)
	set(libOTe_no_pic_FOUND false)
else()
	set(libOTe_no_pic_FOUND true)
endif()
if(ENABLE_ASAN)
	set(libOTe_no_asan_FOUND false)
else()
	set(libOTe_no_asan_FOUND true)
endif()

if(SODIUM_MONTGOMERY)
	set(libOTe_no_sodium_montgomery_FOUND false)
else()
	set(libOTe_no_sodium_montgomery_FOUND true)
endif()

set(libOTe_simplestot_FOUND		${ENABLE_SIMPLESTOT})
set(libOTe_simplestot_asm_FOUND ${ENABLE_SIMPLESTOT_ASM})
set(libOTe_mrr_FOUND			${ENABLE_MRR})
set(libOTe_mrr_twist_FOUND		${ENABLE_MRR_TWIST})
set(libOTe_mr_FOUND				${ENABLE_MR})
set(libOTe_mr_kyber_FOUND		${ENABLE_MR_KYBER})
set(libOTe_kos_FOUND			${ENABLE_KOS})
set(libOTe_iknp_FOUND			${ENABLE_IKNP})
set(libOTe_silentot_FOUND		${ENABLE_SILENTOT})
set(libOTe_softspoken_ot_FOUND	${ENABLE_SOFTSPOKEN_OT})
set(libOTe_delta_kos_FOUND		${ENABLE_DELTA_KOS})
set(libOTe_silent_vole_FOUND	${ENABLE_SILENT_VOLE})
set(libOTe_oos_FOUND			${ENABLE_OOS})
set(libOTe_kkrt_FOUND			${ENABLE_KKRT})
set(libOTe_foleage_FOUND		${ENABLE_FOLEAGE})
set(libOTe_regular_dpf_FOUND	${ENABLE_REGULAR_DPF})
set(libOTe_ternary_dpf_FOUND	${ENABLE_TERNARY_DPF})
set(libOTe_sparse_dpf_FOUND		${ENABLE_SPARSE_DPF})


